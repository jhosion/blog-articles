[
  {
    "id": 1,
    "title": "Vue 3 响应式系统深度解析",
    "summary": "深入探讨 Vue 3 响应式系统的工作原理，对比 Proxy 与 Object.defineProperty 的差异，分享性能优化技巧和最佳实践。包含完整的代码示例和实际应用场景。",
    "publishTime": "2024-06-24",
    "readCount": 128,
    "commentCount": 8,
    "likeCount": 25,
    "category": "前端技术",
    "tags": ["Vue3", "JavaScript", "响应式编程", "性能优化", "前端框架"],
    "fileName": "vue3-reactivity-system.md",
    "author": "Jhosion",
    "excerpt": "Vue 3 的响应式系统是整个框架的核心，它基于 ES6 的 Proxy 重新设计，相比 Vue 2 的 Object.defineProperty 实现，在性能和功能上都有了显著的提升。",
    "featured": true,
    "difficulty": "中级"
  },
  {
    "id": 2,
    "title": "TypeScript 在 Vue 3 项目中的最佳实践",
    "summary": "详细介绍如何在 Vue 3 项目中有效使用 TypeScript，包括组件类型定义、Props 验证、Composables 类型安全等内容。",
    "publishTime": "2024-06-20",
    "readCount": 95,
    "commentCount": 12,
    "likeCount": 18,
    "category": "前端技术",
    "tags": ["TypeScript", "Vue3", "类型安全", "最佳实践"],
    "fileName": "typescript-vue3-best-practices.md",
    "author": "Jhosion",
    "excerpt": "TypeScript 为 Vue 3 项目带来了强类型支持，本文将分享在实际项目中的应用经验和最佳实践。",
    "featured": false,
    "difficulty": "中级"
  },
  {
    "id": 3,
    "title": "使用 Vite 构建现代前端开发环境",
    "summary": "介绍 Vite 的核心特性、配置技巧和在实际项目中的应用，包括热更新、代码分割、插件系统等内容。",
    "publishTime": "2024-06-15",
    "readCount": 167,
    "commentCount": 6,
    "likeCount": 32,
    "category": "开发工具",
    "tags": ["Vite", "构建工具", "开发环境", "前端工程化"],
    "fileName": "vite-modern-frontend-tooling.md",
    "author": "Jhosion",
    "excerpt": "Vite 作为新一代前端构建工具，以其快速的冷启动和热更新能力革新了前端开发体验。",
    "featured": true,
    "difficulty": "初级"
  },
  {
    "id": 4,
    "title": "CSS Grid 布局完全指南",
    "summary": "全面介绍 CSS Grid 布局系统，从基础概念到高级应用，包含大量实用示例和布局技巧。",
    "publishTime": "2024-06-10",
    "readCount": 203,
    "commentCount": 15,
    "likeCount": 41,
    "category": "前端技术",
    "tags": ["CSS", "Grid布局", "响应式设计", "前端基础"],
    "fileName": "css-grid-complete-guide.md",
    "author": "Jhosion",
    "excerpt": "CSS Grid 是现代网页布局的强大工具，本指南将帮你掌握从基础到高级的所有Grid布局技巧。",
    "featured": false,
    "difficulty": "中级"
  },
  {
    "id": 5,
    "title": "JavaScript 异步编程进阶指南",
    "summary": "深入探讨 JavaScript 异步编程的各种模式，包括 Promise、async/await、事件循环机制等核心概念。",
    "publishTime": "2024-06-05",
    "readCount": 158,
    "commentCount": 20,
    "likeCount": 35,
    "category": "编程语言",
    "tags": ["JavaScript", "异步编程", "Promise", "async/await", "事件循环"],
    "fileName": "javascript-async-programming.md",
    "author": "Jhosion",
    "excerpt": "异步编程是 JavaScript 的核心特性之一，掌握它对于编写高效的前端应用至关重要。",
    "featured": true,
    "difficulty": "高级"
  },
  {
    "id": 6,
    "title": "Node.js 性能优化实战经验",
    "summary": "分享 Node.js 应用性能优化的实战经验，包括内存管理、事件循环优化、数据库连接池等技术要点。",
    "publishTime": "2024-05-28",
    "readCount": 112,
    "commentCount": 9,
    "likeCount": 22,
    "category": "后端技术",
    "tags": ["Node.js", "性能优化", "后端开发", "内存管理"],
    "fileName": "nodejs-performance-optimization.md",
    "author": "Jhosion",
    "excerpt": "Node.js 应用的性能优化需要从多个维度考虑，本文分享一些实用的优化策略和工具。",
    "featured": false,
    "difficulty": "高级"
  }
]